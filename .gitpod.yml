image: temporalio/gitpod-edu:1.3
tasks:
    # task links a bash configuration file to a location that is not
    # specific to this course (/etc/bash.bashrc sources it from there)
  - name: Shell configuration
    init: |
      ln /workspace/edu-102-go-code/.bash.cfg /workspace/.bash.cfg
      exit;
    # task fixes the 'Analysis Tools Missing' warning in status bar
  - name: install staticcheck
    init: |
      go install honnef.co/go/tools/cmd/staticcheck@latest
      exit;
    # task retrieves the project dependencies
  - name: Go Get Fetcher 
    init: |
      go get -v -t -d ./...
      exit;
    # task starts the Temporal Service via the CLI
  - name: Temporal Local Development Server
    command: |
      export TEMPORAL_NOTIFY_ON_NEW_VERSION=false
      export TEMPORAL_CORS_ORIGINS=http://localhost:3000
      temporal server start-dev \
        --ui-port 8080 \
        --db-filename /workspace/.cluster-persistence.db
    openMode: tab-after
  - name: Display Web UI
    command: |
      echo "Waiting for server...."
      gp ports await 8080 && gp preview $(gp url 8080)
      exit;
  - name: Display Exercise Instructions
    command: |
      gp open README.md
      exit;
    openMode: split-right
  - name: Worker
    command: |
      # use the original file path so that this won't depend on the 
      # completion of the task above that links this elsewhere (the
      # Docker image expects it in the same location for every course, 
      # but this .gitpod.yml file can use course-specific paths)
      source /workspace/edu-102-go-code/.bash.cfg
      clear
      echo "Use this terminal to start your Worker."
  - name: Terminal
    command: |
      source /workspace/edu-102-go-code/.bash.cfg
      clear
      echo "Use this terminal to run commands.."
    openMode: split-right
  - name: Microservice
    command: |
      source /workspace/edu-102-go-code/.bash.cfg
      cd exercises/durable-execution/solution
      clear
      echo "Translation Microservice running on this terminal"
      go run microservice/translation-service.go
    openMode: split-right

ports:
  - name: Temporal server's Frontend service
    port: 7233
    onOpen: ignore
  - name: Temporal Web UI
    port: 8080 # custom port, as per --ui-port option above
    description: Temporal Web UI
    onOpen: ignore
    visibility: private
  - name: Translation Service
    description: Local microservice used in exercises
    port: 9998
    onOpen: ignore
    visibility: private

vscode:
  extensions:
    - golang.Go
    - ms-python.python
    - ms-python.debugpy
    - redhat.java
    - vscjava.vscode-java-test
    - vscjava.vscode-java-debug
    - wingrunr21.vscode-ruby
    - ms-toolsai.jupyter
    - ms-toolsai.jupyter-keymap
    - ms-toolsai.jupyter-renderers
    - ms-toolsai.vscode-jupyter-cell-tags
    - ms-toolsai.vscode-jupyter-slideshow
